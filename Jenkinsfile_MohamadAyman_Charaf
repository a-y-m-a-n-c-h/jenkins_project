pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv'
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    if (!fileExists("${env.WORKSPACE}/${VIRTUAL_ENV}")) {
                        sh "python3 -m venv ${VIRTUAL_ENV}"
                    }
                    sh """
                    source ${VIRTUAL_ENV}/bin/activate
                    pip install -r requirements.txt
                    """
                }
            }
        }
        stage('Lint') {
            steps {
                sh "source ${VIRTUAL_ENV}/bin/activate && flake8 app.py"
            }
        }
        stage('Test') {
            steps {
                sh "source ${VIRTUAL_ENV}/bin/activate && coverage run -m unittest discover -s tests"
            }
        }
        stage('Coverage') {
            steps {
                sh "source ${VIRTUAL_ENV}/bin/activate && coverage report"
                sh "source ${VIRTUAL_ENV}/bin/activate && coverage html"
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: 'htmlcov',
                    reportFiles: 'index.html',
                    reportName: 'Coverage Report'
                ])
            }
        }
        stage('Security Scan') {
            steps {
                sh "source ${VIRTUAL_ENV}/bin/activate && bandit -r ."
            }
        }
        stage('Deploy') {
            steps {
                sh "mkdir -p deployment"
                sh "cp app.py deployment/"
                echo "Application deployed to the 'deployment' directory."
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}

